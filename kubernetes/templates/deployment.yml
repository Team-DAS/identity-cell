{{/* Este bucle recorrerá cada servicio definido en values.yml */}}
{{- range $name, $values := .Values.services }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  namespace: {{ $.Values.namespace }}
  labels:
    app: {{ $name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $name }}
  template:
    metadata:
      labels:
        app: {{ $name }}
        cell: identity-cell
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "{{ $values.port }}"
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yml") $ | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yml") $ | sha256sum }}
    spec:
      containers:
        - name: {{ $name }}
          # Lee el nombre y la etiqueta de la imagen desde values.yaml
          image: "{{ $values.repository }}:{{ $values.tag }}"
          # "Always" fuerza a que siempre descargue la imagen, útil si usas la etiqueta :latest
          imagePullPolicy: Always
          ports:
            - containerPort: {{ $values.port }}
          # Aquí está la magia: cargamos las variables de entorno
          envFrom:
            # 1. Carga todas las variables del ConfigMap que creamos
            - configMapRef:
                name: identity-config
            # 2. Carga todas las variables del Secret que creamos
            - secretRef:
                name: identity-secrets
          # También podemos definir variables individuales si es necesario
          env:
            - name: SERVER_PORT
              value: "{{ $values.port }}"
---
{{- end }}
